name: MSA Module Deployment

on:
  push:
    branches:
      - develop

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      changed_modules: ${{ steps.detect.outputs.changed_modules }}
    steps:
      - name: sout test
        run: |
          echo "this is test"
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Detect changed modules
        id: detect
        run: |
          # Define module directories
          MODULES=("OFZ-eureka" "OFZ-payment" "OFZ-api-gateway")

          PREV_COMMIT=$(git merge-base HEAD origin/develop)
          
          # Detect changes
          CHANGED_MODULES=()
          for MODULE in "${MODULES[@]}"; do
              if git diff --name-only $PREV_COMMIT HEAD | grep -q "^$MODULE/"; then
                  CHANGED_MODULES+=($MODULE)
              fi
          done

          # Output changed modules as a string
          echo "this is test"
          echo "changed_modules=${CHANGED_MODULES[*]}"
          echo "changed_modules=${CHANGED_MODULES[*]}" >> $GITHUB_OUTPUT

  # deploy:
  #   needs: detect-modules
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       module: ${{ fromJson(needs.detect-modules.outputs.changed_modules) }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
      
  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
      
  #     - name: Build and deploy ${{ matrix.module }}
  #       run: |
  #         echo 'this is test!'
  #         echo ${{ matrix.module }}
          
  #         # cd ${{ matrix.module }}
  #         # ./gradlew clean build
          
  #         # # Example deploy script
  #         # ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
  #         #   cd /path/to/${{ matrix.module }}
  #         #   ./deploy.sh
  #         # EOF
