spring:
  profiles:
    active: local
    group:
      local:
        - common
      prod:
        - common
---
spring:
  config:
    activate:
      on-profile: common
    import: optional:file:.env[.properties]


  application:
    name: api-gateway

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:5173"
            allow-credentials: true
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allowedMethods:
              - POST
              - GET
              - PUT
              - PATCH
              - OPTIONS
              - DELETE

      routes:
        - id: users
          uri: lb://payment-service
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=1

        - id: payment
          uri: lb://payment-service
          predicates:
            - Path=/api/payment/**
          filters:
            - StripPrefix=1

        - id: schedule-service
          uri: lb://schedule-service
          predicates:
            - Path=/api/schedule/**
          filters:
            - StripPrefix=1

        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notification/**
          filters:
            - StripPrefix=1

        - id: asset-service
          uri: lb://asset-service
          predicates:
            - Path=/api/asset/**
          filters:
            - StripPrefix=1


server:
  port: 8080

jwt:
  secret: ${JWT_SECRET}

---
spring:
  config:
    activate:
      on-profile: local

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: "http://localhost:8087/eureka"
  server:
    wait-time-in-ms-when-sync-empty: 5
---
spring:
  config:
    activate:
      on-profile: prod

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: ${OFZ_EUREKA_URL}
  server:
    wait-time-in-ms-when-sync-empty: 5